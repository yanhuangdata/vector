version: "3"

services:
  mongodb-primary:
    image: docker.io/bitnami/mongodb:${MONGO_VERSION:-4.2.10}
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=toor
      - MONGODB_REPLICA_SET_KEY=vector
    networks:
      - backend
  mongodb-secondary:
    image: docker.io/bitnami/mongodb:${MONGO_VERSION:-4.2.10}
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=toor
      - MONGODB_REPLICA_SET_KEY=vector
    networks:
      - backend
  mongodb-arbiter:
    image: docker.io/bitnami/mongodb:${MONGO_VERSION:-4.2.10}
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=toor
      - MONGODB_REPLICA_SET_KEY=vector
    networks:
      - backend
  runner:
    build:
      context: ${PWD}
      dockerfile: scripts/integration/Dockerfile
      args:
        - RUST_VERSION=${RUST_VERSION}
    working_dir: /code
    command:
      - "cargo"
      - "nextest"
      - "run"
      - "--no-fail-fast"
      - "--no-default-features"
      - "--features"
      - "mongodb_metrics-integration-tests"
      - "--lib"
      - "::mongodb_metrics::"
      - "--"
      - "--nocapture"
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
    environment:
      - PRIMARY_MONGODB_ADDRESS=mongodb://root:toor@mongodb-primary
      - SECONDARY_MONGODB_ADDRESS=mongodb://root:toor@mongodb-secondary
    networks:
      - backend
    volumes:
      - ${PWD}:/code
      - cargogit:/usr/local/cargo/git
      - cargoregistry:/usr/local/cargo/registry

networks:
  backend: {}

volumes:
  cargogit: {}
  cargoregistry: {}
