version: "3"

services:
  mock-ec2-metadata:
    image: docker.io/timberiodev/mock-ec2-metadata:latest
    networks:
      - backend
  mock-localstack:
    image: docker.io/localstack/localstack-full:0.11.6
    environment:
      - SERVICES=kinesis,s3,cloudwatch,elasticsearch,es,firehose,sqs
    networks:
      - backend
  mock-watchlogs:
    image: docker.io/luciofranco/mockwatchlogs:latest
    networks:
      - backend
  mock-ecs:
    image: docker.io/amazon/amazon-ecs-local-container-endpoints:latest
    networks:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/.aws/:/home/.aws/
  runner:
    build:
      context: ${PWD}
      dockerfile: scripts/integration/Dockerfile
      args:
        - RUST_VERSION=${RUST_VERSION}
    working_dir: /code
    command:
      - "cargo"
      - "nextest"
      - "run"
      - "--no-fail-fast"
      - "--no-default-features"
      - "--features"
      - "aws-integration-tests"
      - "--lib"
      - "${FILTER:-::aws_}"
      - "--"
      - "--nocapture"
    depends_on:
      - mock-ec2-metadata
      - mock-localstack
      - mock-watchlogs
      - mock-ecs
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - CLOUDWATCH_ADDRESS=http://mock-localstack:4566
      - EC2_METADATA_ADDRESS=http://mock-ec2-metadata:8111
      - ECS_ADDRESS=http://mock-ecs
      - KINESIS_ADDRESS=http://mock-localstack:4566
      - ELASTICSEARCH_ADDRESS=http://mock-localstack:4571
      - S3_ADDRESS=http://mock-localstack:4566
      - SQS_ADDRESS=http://mock-localstack:4566
      - WATCHLOGS_ADDRESS=http://mock-watchlogs:6000
    networks:
      - backend
    volumes:
      - ${PWD}:/code
      - cargogit:/usr/local/cargo/git
      - cargoregistry:/usr/local/cargo/registry

networks:
  backend: {}

volumes:
  cargogit: {}
  cargoregistry: {}
