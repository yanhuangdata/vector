version: "3"

services:
  localstack:
    image: docker.io/localstack/localstack@sha256:f21f1fc770ee4bfd5012afdc902154c56b7fb18c14cf672de151b65569c8251e
    environment:
      - SERVICES=elasticsearch:4571
    networks:
      - backend
  elasticsearch:
    image: docker.io/elasticsearch:7.13.1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms400m -Xmx400m"
    networks:
      - backend
  elasticsearch-secure:
    image: docker.io/elasticsearch:7.13.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.certificate=certs/elasticsearch.crt
      - xpack.security.http.ssl.key=certs/elasticsearch.key
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.certificate=certs/elasticsearch.crt
      - xpack.security.transport.ssl.key=certs/elasticsearch.key
      - ELASTIC_PASSWORD=vector
      - "ES_JAVA_OPTS=-Xms400m -Xmx400m"
    networks:
      - backend
    volumes:
      - ${PWD}/tests/data:/usr/share/elasticsearch/config/certs:ro
  runner:
    build:
      context: ${PWD}
      dockerfile: scripts/integration/Dockerfile
      args:
        - RUST_VERSION=${RUST_VERSION}
    working_dir: /code
    command:
      - "cargo"
      - "nextest"
      - "run"
      - "--no-fail-fast"
      - "--no-default-features"
      - "--features"
      - "es-integration-tests"
      - "--lib"
      - "::elasticsearch::integration_tests::"
      - "--"
      - "--nocapture"
    depends_on:
      - localstack
      - elasticsearch
      - elasticsearch-secure
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - ELASTICSEARCH_AWS_ADDRESS=http://localstack:4571
      - ELASTICSEARCH_HTTP_ADDRESS=http://elasticsearch:9200
      - ELASTICSEARCH_HTTPS_ADDRESS=https://elasticsearch-secure:9200
    networks:
      - backend
    volumes:
      - ${PWD}:/code
      - cargogit:/usr/local/cargo/git
      - cargoregistry:/usr/local/cargo/registry

networks:
  backend: {}

volumes:
  cargogit: {}
  cargoregistry: {}
