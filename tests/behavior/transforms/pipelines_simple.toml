[sources.pipelines_syslog]
type = "demo_logs"
format = "syslog"

[transforms.pipelines_gate]
type = "remap"
inputs = ["pipelines_syslog"]
source = ""

[transforms.pipelines_processing]
type = "pipelines"
inputs = ["pipelines_gate"]

[[transforms.pipelines_processing.logs]]
name = "foo"
filter.type = "vrl"
filter.source = """contains(.message, "hello", case_sensitive: false) ?? false"""

[[transforms.pipelines_processing.logs.transforms]]
type = "remap"
source = ". |= parse_syslog!(.message)"

[[transforms.pipelines_processing.logs.transforms]]
type = "remap"
source = ".went_through_foo = true"

[[transforms.pipelines_processing.logs]]
name = "bar"

[[transforms.pipelines_processing.logs.transforms]]
type = "remap"
source = ".went_through_bar = true"

[sinks.pipelines_console]
type = "console"
inputs = ["pipelines_processing"]
encoding.codec = "json"
target = "stdout"

[[tests]]
name = "through logs"

[tests.input]
insert_at = "pipelines_gate"
value = "hello world"

[[tests.outputs]]
extract_from = "pipelines_processing"

[[tests.outputs.conditions]]
type = "check_fields"
"went_through_bar.equals" = true
"went_through_foo.equals" = true

[[tests]]
name = "filtered log"

[tests.input]
insert_at = "pipelines_gate"
value = "bonjour le monde"

[[tests.outputs]]
extract_from = "pipelines_processing"

[[tests.outputs.conditions]]
type = "check_fields"
"went_through_bar.equals" = true
